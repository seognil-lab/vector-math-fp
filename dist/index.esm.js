import{curry as a,zipWith as t,subtract as s,add as e,multiply as r,divide as o,pipe as n,map as i,sum as h}from"lodash/fp";import f from"approx-fix";const m=a((a,s,e)=>t(a,e,s)),M=a((a,t)=>a.reduce((a,s,e)=>(a[s]=t[e]||0,a),{})),d=a((a,t)=>a.map(a=>t[a]||0)),l=a=>180*a/Math.PI,p=a=>a/180*Math.PI,c=a=>180==Math.abs(a%360)?180:(a%360+540)%360-180,u=m(s),O=m(e),g=m(r),T=m(o),b=a((a,t)=>a[0]*t[0]+a[1]*t[1]),x=a((a,t)=>a[0]*t[1]-t[0]*a[1]),j=n([i(a=>Math.pow(a,2)),h,Math.sqrt]),v=a=>r(...a),w=([a,t])=>t?a/t:NaN,A=a((a,t)=>{let s=j(a)*j(t);if(0==s)return 0;let e=b(a,t)/s;return e=Math.min(e,1),f(l(Math.acos(e)*(x(a,t)<0?-1:1)))}),I=A([1,0]),N={"-90":[0,-1],0:[1,0],90:[0,1],180:[-1,0]},P=a=>{let t;return a=c(a),N[a]||(t=p(a),[Math.cos(t),Math.sin(t)])},R=(a,t)=>{a=a||0;let s=j(t);if(0==s)return t;const e=p(a);let r=t[0]/s,o=t[1]/s,n=Math.cos(e),i=Math.sin(e);return[(r*n-o*i)*s,(o*n+r*i)*s].map(f)},q=a(R),B=a((a,t)=>R(-a,t));export{O as add,A as angleBetween,I as angleOf,v as areaOf,M as arrToObj,x as cross,p as degreeToRadian,T as divide,b as dot,c as formatAngle,j as lenOf,m as math,u as minus,d as objToArr,l as radianToDegree,w as ratioOf,q as rotate,g as times,B as unRotate,P as vectorOf};
