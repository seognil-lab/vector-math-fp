{"version":3,"file":"index.min.js","sources":["../src/index.js"],"sourcesContent":["import {\n    add,\n    curry,\n    divide,\n    map,\n    multiply,\n    pipe,\n    subtract,\n    sum,\n    zipWith,\n    mergeWith,\n    cloneDeep,\n} from 'lodash/fp';\n\nimport approxFix from 'approx-fix';\n\n// e.g.:\n// Vmath(divide)(v1)(v2) => v2 / 1v\n// Vrotate(angle)(v) => v ~\n// Vmath(divide)([1, 2])([4, 6]) => [4, 3]\n\n// * -------------------------------- tools\n\n// * support Array and Object\nconst Vmath = curry((fn, v2, v1) =>\n    Array.isArray(v1) ? zipWith(fn, v1, v2) : mergeWith(fn, cloneDeep(v1), v2),\n);\n\nconst VarrToObj = curry((keys, arr) =>\n    keys.reduce((o, k, i) => Object.assign(o, { [k]: arr[i] || 0 }), {}),\n);\nconst VobjToArr = curry((keys, obj) => keys.map(k => obj[k] || 0));\nconst VradianToDegree = n => (n * 180) / Math.PI;\nconst VdegreeToRadian = n => (n / 180) * Math.PI;\nconst VformatAngle = angle =>\n    Math.abs(angle % 360) === 180 ? 180 : (((angle % 360) + 540) % 360) - 180;\n\n// * ---------------- simple math\n\nconst Vminus = Vmath(subtract);\nconst Vadd = Vmath(add);\nconst Vtimes = Vmath(multiply);\nconst Vdivide = Vmath(divide);\nconst Vdot = curry((v1, v2) => v1[0] * v2[0] + v1[1] * v2[1]); // === * cos(tha)\nconst Vcross = curry((v1, v2) => v1[0] * v2[1] - v2[0] * v1[1]); // === * sin(tha)\n\n// * ---------------- vector property\n\nconst VlenOf = pipe([map(e => e ** 2), sum, Math.sqrt]);\nconst VareaOf = v => multiply(...v);\nconst VratioOf = ([x, y]) => (!y ? NaN : x / y); // 16:9 => 16 / 9\n\n// * -------------------------------- rotate and angle\n\nconst VangleBetween = curry((v1, v2) => {\n    const s = VlenOf(v1) * VlenOf(v2);\n    if (s === 0) return 0;\n\n    let r = Vdot(v1, v2) / s;\n    r = Math.min(r, 1);\n    return approxFix(VradianToDegree(Math.acos(r) * (Vcross(v1, v2) < 0 ? -1 : 1)));\n});\n\nconst VangleOf = VangleBetween([1, 0]);\n\nconst VvectorCase = {\n    '-90': [0, -1],\n    0: [1, 0],\n    90: [0, 1],\n    180: [-1, 0],\n};\n\nconst VvectorOf = angle => {\n    const normalAngle = VformatAngle(angle);\n    if (VvectorCase[normalAngle]) return VvectorCase[normalAngle];\n\n    const radian = VdegreeToRadian(normalAngle);\n    return [Math.cos(radian), Math.sin(radian)];\n};\n\nconst VrotateRaw = (angle, v) => {\n    const c = VlenOf(v);\n    if (c === 0) return v;\n\n    const radian = VdegreeToRadian(angle);\n    const cos1 = v[0] / c;\n    const sin1 = v[1] / c;\n    const cos2 = Math.cos(radian);\n    const sin2 = Math.sin(radian);\n    return [(cos1 * cos2 - sin1 * sin2) * c, (sin1 * cos2 + cos1 * sin2) * c].map(approxFix);\n};\nconst Vrotate = curry(VrotateRaw);\nconst VunRotate = curry((angle, v) => VrotateRaw(-angle, v));\n\n// * -------------------------------- export\n\nexport {\n    Vmath as math,\n    VarrToObj as arrToObj,\n    VobjToArr as objToArr,\n    VradianToDegree as radianToDegree,\n    VdegreeToRadian as degreeToRadian,\n    VformatAngle as formatAngle,\n    Vminus as minus,\n    Vadd as add,\n    Vtimes as times,\n    Vdivide as divide,\n    Vdot as dot,\n    Vcross as cross,\n    VlenOf as lenOf,\n    VareaOf as areaOf,\n    VratioOf as ratioOf,\n    VangleBetween as angleBetween,\n    VangleOf as angleOf,\n    VvectorOf as vectorOf,\n    Vrotate as rotate,\n    VunRotate as unRotate,\n};\n"],"names":["Vmath","curry","fn","v2","v1","Array","isArray","zipWith","mergeWith","cloneDeep","VarrToObj","keys","arr","reduce","o","k","i","Object","assign","VobjToArr","obj","map","VradianToDegree","n","Math","PI","VdegreeToRadian","VformatAngle","angle","abs","Vminus","subtract","Vadd","add","Vtimes","multiply","Vdivide","divide","Vdot","Vcross","VlenOf","pipe","e","sum","sqrt","VareaOf","v","VratioOf","x","y","NaN","VangleBetween","s","r","min","approxFix","acos","VangleOf","VvectorCase","VvectorOf","normalAngle","radian","cos","sin","VrotateRaw","c","cos1","sin1","cos2","sin2","Vrotate","VunRotate"],"mappings":"s0CAwBA,IAAMA,MAAQC,SAAM,SAACC,EAAIC,EAAIC,UACzBC,MAAMC,QAAQF,GAAMG,WAAQL,EAAIE,EAAID,GAAMK,aAAUN,EAAIO,aAAUL,GAAKD,KAGrEO,UAAYT,SAAM,SAACU,EAAMC,UAC3BD,EAAKE,OAAO,SAACC,EAAGC,EAAGC,UAAMC,OAAOC,OAAOJ,qBAAMC,EAAIH,EAAII,IAAM,KAAM,MAE/DG,UAAYlB,SAAM,SAACU,EAAMS,UAAQT,EAAKU,IAAI,SAAAN,UAAKK,EAAIL,IAAM,MACzDO,gBAAkB,SAAAC,UAAU,IAAJA,EAAWC,KAAKC,IACxCC,gBAAkB,SAAAH,UAAMA,EAAI,IAAOC,KAAKC,IACxCE,aAAe,SAAAC,UACS,MAA1BJ,KAAKK,IAAID,EAAQ,KAAe,KAASA,EAAQ,IAAO,KAAO,IAAO,KAIpEE,OAAS9B,MAAM+B,aACfC,KAAOhC,MAAMiC,QACbC,OAASlC,MAAMmC,aACfC,QAAUpC,MAAMqC,WAChBC,KAAOrC,SAAM,SAACG,EAAID,UAAOC,EAAG,GAAKD,EAAG,GAAKC,EAAG,GAAKD,EAAG,KACpDoC,OAAStC,SAAM,SAACG,EAAID,UAAOC,EAAG,GAAKD,EAAG,GAAKA,EAAG,GAAKC,EAAG,KAItDoC,OAASC,QAAK,CAACpB,OAAI,SAAAqB,mBAAKA,EAAK,KAAIC,OAAKnB,KAAKoB,OAC3CC,QAAU,SAAAC,UAAKX,4CAAYW,KAC3BC,SAAW,sCAAEC,OAAGC,cAASA,EAAUD,EAAIC,EAAVC,KAI7BC,cAAgBlD,SAAM,SAACG,EAAID,OACvBiD,EAAIZ,OAAOpC,GAAMoC,OAAOrC,MACpB,IAANiD,EAAS,OAAO,MAEhBC,EAAIf,KAAKlC,EAAID,GAAMiD,SACvBC,EAAI7B,KAAK8B,IAAID,EAAG,GACTE,UAAUjC,gBAAgBE,KAAKgC,KAAKH,IAAMd,OAAOnC,EAAID,GAAM,GAAK,EAAI,OAGzEsD,SAAWN,cAAc,CAAC,EAAG,IAE7BO,YAAc,OACT,CAAC,GAAI,KACT,CAAC,EAAG,MACH,CAAC,EAAG,OACH,EAAE,EAAG,IAGRC,UAAY,SAAA/B,OACRgC,EAAcjC,aAAaC,MAC7B8B,YAAYE,GAAc,OAAOF,YAAYE,OAE3CC,EAASnC,gBAAgBkC,SACxB,CAACpC,KAAKsC,IAAID,GAASrC,KAAKuC,IAAIF,KAGjCG,WAAa,SAACpC,EAAOkB,OACjBmB,EAAIzB,OAAOM,MACP,IAANmB,EAAS,OAAOnB,MAEde,EAASnC,gBAAgBE,GACzBsC,EAAOpB,EAAE,GAAKmB,EACdE,EAAOrB,EAAE,GAAKmB,EACdG,EAAO5C,KAAKsC,IAAID,GAChBQ,EAAO7C,KAAKuC,IAAIF,SACf,EAAEK,EAAOE,EAAOD,EAAOE,GAAQJ,GAAIE,EAAOC,EAAOF,EAAOG,GAAQJ,GAAG5C,IAAIkC,YAE5Ee,QAAUrE,SAAM+D,YAChBO,UAAYtE,SAAM,SAAC2B,EAAOkB,UAAMkB,YAAYpC,EAAOkB"}